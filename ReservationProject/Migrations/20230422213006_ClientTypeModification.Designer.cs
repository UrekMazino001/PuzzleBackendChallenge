// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationProject.Context;

#nullable disable

namespace ReservationProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230422213006_ClientTypeModification")]
    partial class ClientTypeModification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservationProject.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Clients", t =>
                        {
                            t.HasCheckConstraint("chkClientClientType", "ClientType in ('P', 'C')");

                            t.HasCheckConstraint("chkClientStatus", "status in ('A', 'D', 'C')");
                        });
                });

            modelBuilder.Entity("ReservationProject.Entities.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Birthday"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Wedding"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Conference"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Training"
                        });
                });

            modelBuilder.Entity("ReservationProject.Entities.Furniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Furniture", t =>
                        {
                            t.HasCheckConstraint("chkFurniturStatus", "status in ('A', 'R')");
                        });
                });

            modelBuilder.Entity("ReservationProject.Entities.FurnitureReservation", b =>
                {
                    b.Property<int>("FurnitureId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("FurnitureId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("FurnitureReservations");
                });

            modelBuilder.Entity("ReservationProject.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Reservations", t =>
                        {
                            t.HasCheckConstraint("chkReservationStatus", "status in ('A', 'D')");
                        });
                });

            modelBuilder.Entity("ReservationProject.Entities.FurnitureReservation", b =>
                {
                    b.HasOne("ReservationProject.Entities.Furniture", "Furniture")
                        .WithMany("FurnitureList")
                        .HasForeignKey("FurnitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationProject.Entities.Reservation", "Reservation")
                        .WithMany("FurnitureList")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ReservationProject.Entities.Reservation", b =>
                {
                    b.HasOne("ReservationProject.Entities.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationProject.Entities.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("ReservationProject.Entities.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ReservationProject.Entities.Furniture", b =>
                {
                    b.Navigation("FurnitureList");
                });

            modelBuilder.Entity("ReservationProject.Entities.Reservation", b =>
                {
                    b.Navigation("FurnitureList");
                });
#pragma warning restore 612, 618
        }
    }
}
